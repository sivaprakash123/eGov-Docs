swagger: '2.0'
# eGSP YAML Template Version: 1.0

info:
  version: 1.0.0
  ######################################################
  # All API's are POST. _create,_search,_update for post,get and put. RequestInfo will be part of body. For multiple records we can pass multiple value with comman seperated values*.
  # All _search will be synchronous and all _create and _update will be asynchronous*.
  # RequestInfo and ResponseInfo object should be reffered from Common*.
  # In _search API, tenantId should be passed in query param. In _create/_update, tenantId should be passed in the model.
  # Readonly means that even if these fields are passed in the request, it will be ignored in create/update and will not be added/updated in the entities. The readonly fields might be passed to the _search API's to make use of fields for the search Query API. while calling _search API's even mandatory fields might not be available, it is mandatory only in the _create API's*.
  # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message.
  # Definition must start with Upper case followed by camel case.
  # Every model will have tenantId. Validate tenantId on create.
  # Parameter name must start with small case followed by camel case.
  # Path must be in small case.
  ######################################################

  title: eGov Billing Service APIs
  description: eGov Billing Service manages head wise demand and Demand Bill information for all the revenue modules from eGov solution. It manages

    * The demand data for a revenue module with category of tax for a defined *period, rebate, penalty, late payment interest, fee* etc and again head wise in each category. This module have one entity called Demand for every revenue entity which holds the list of category and head wise demands for a defined period in DemandDetail.

    * The Demand Bill data with period and head wise dues and its payment details.

    * Service APIs supports single tenant only
  contact:
    name:  Ramakrishna (Ramki)
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/billingservice/v1'
x-common-path: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml'

paths:
  /taxheads/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a 'TaxHeadMaster'
        By default results will be sorted by service and name
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: service
          in: query
          description: Name of the business service for which 'TaxHeadMaster' to be returned.
          required: true
          type: string
        - name: catgegory
          in: query
          description: Name of the tax cagtegory for which 'TaxHeadMaster' to be returned.
          required: false
          type: string
        - name: name
          in: query
          description: Name of the tax head for which 'TaxHeadMaster' to be returned.
          required: false
          type: string
        - name: code
          in: query
          description: Code of the tax head for which 'TaxHeadMaster' to be returned.
          required: false
          type: array
          items:
            type: string
        - name: isDebit
          in: query
          description: isDebit value of the tax head for which 'TaxHeadMaster' to be returned.
          required: false
          type: boolean
        - name: isActualDemand
          in: query
          description: isActualDemand value of the tax head for which 'TaxHeadMaster' to be returned.
          required: false
          type: boolean
        - name: validFrom
          in: query
          description: period from date
          required: false
          type: integer
        - name: validTill
          in: query
          description: period to.
          required: false
          type: integer
        - name: id
          in: query
          description: Id(s) of the TaxHeadMaster(s) to be returned
          required: false
          type: array
          items:
            type: string
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a 'TaxHeadMaster'.
          schema:
            $ref: '#/definitions/TaxHeadMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /taxheads/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a 'TaxHeadMaster'
      parameters:
        - name: TaxHeadMaster
          in: body
          description: Request header for the 'TaxHeadMaster'.
          required: true
          schema:
            $ref: '#/definitions/TaxHeadMasterRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: created BusinessServiceDetail(s) successfully.
          schema:
            $ref: '#/definitions/TaxHeadMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /taxheads/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a 'TaxHeadMaster'.
      parameters:
        - name: TaxHeadMaster
          in: body
          description: Request header for the 'TaxHeadMaster'.
          required: true
          schema:
            $ref: '#/definitions/TaxHeadMasterRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: update a BusinessServiceDetail(s) successful.
          schema:
            $ref: '#/definitions/TaxHeadMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessservices/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a 'BusinessServiceDetails'
        By default results will be sorted by businessService
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: businessService
          in: query
          description: Code of the businessservice(s) for which 'BusinessServiceDetails' to be returned.
          required: true
          type: array
          items:
            type: string
        - name: id
          in: query
          description: Id(s) of the BusinessServiceDetail(s) to be returned
          required: false
          type: array
          items:
            type: string
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a 'BusinessServiceDetails'.
          schema:
            $ref: '#/definitions/BusinessServiceDetailResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessservices/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a 'BusinessServiceDetails'
      parameters:
        - name: businessServiceDetails
          in: body
          description: Request header for the 'BusinessServiceDetails'.
          required: true
          schema:
            $ref: '#/definitions/BusinessServiceDetailRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: created BusinessServiceDetail(s) successfully.
          schema:
            $ref: '#/definitions/BusinessServiceDetailResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessservices/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a 'BusinessServiceDetails'.
      parameters:
        - name: businessServiceDetails
          in: body
          description: Request header for the 'BusinessServiceDetails'.
          required: true
          schema:
            $ref: '#/definitions/BusinessServiceDetailRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: update a BusinessServiceDetail(s) successful.
          schema:
            $ref: '#/definitions/BusinessServiceDetailResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /taxperiods/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a 'TaxPeriod'.
        By default, results will be sorted by service and description
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: service
          in: query
          description: Name of the business service for which 'TaxPeriod' is to be returned.
          required: true
          type: string
        - name: id
          in: query
          description: Id(s) of the TaxPeriod(s) to be returned
          required: false
          type: array
          items:
            type: string
        - name: periodCycle
          in: query
          description: cycle of the tax period for which 'TaxPeriod' is to be returned.
          required: true
          type: string
        - name: code
          in: query
          description: code of the tax period for which 'TaxPeriod' is to be returned.
          required: false
          type: string
        - name: date
          in: query
          description: date to search Tax period where this date falls for the range of dates defined in tax period.
          required: false
          type: integer
        - name: fromDate
          in: query
          description: period from date
          required: false
          type: integer
        - name: toDate
          in: query
          description: period to.
          required: false
          type: integer
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns 'TaxPeriod'.
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /taxperiods/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a 'TaxPeriod'
      parameters:
        - name: TaxPeriod
          in: body
          description: Request header for the 'TaxPeriod'.
          required: true
          schema:
            $ref: '#/definitions/TaxPeriodRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: created TaxPeriod(s) successfully.
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /taxperiods/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a 'TaxPeriod'.
      parameters:
        - name: TaxPeriod
          in: body
          description: Request header for the 'TaxPeriod'.
          required: true
          schema:
            $ref: '#/definitions/TaxPeriodRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: update a TaxPeriod(s) successful.
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /glcodemasters/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a 'GlcodeMaster'.
        By default, results will be sorted by service and description
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: service
          in: query
          description: Name of the business service for which 'GlcodeMaster' is to be returned.
          required: true
          type: string
        - name: glCode
          in: query
          description: glCode for which 'GlcodeMaster' is to be returned.
          required: true
          type: string
        - name: taxHead
          in: query
          description: Name of the Tax Head for which 'GlcodeMaster' is to be returned.
          required: true
          type: array
          items:
            type: string
        - name: id
          in: query
          description: Id(s) of the GlcodeMaster(s) to be returned
          required: false
          type: array
          items:
            type: string
        - name: fromDate
          in: query
          description: period from date
          required: false
          type: integer
        - name: toDate
          in: query
          description: period to.
          required: false
          type: integer
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns 'GlcodeMaster'.
          schema:
            $ref: '#/definitions/GlcodeMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /glcodemasters/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a 'GlcodeMaster'
      parameters:
        - name: GlcodeMaster
          in: body
          description: Request header for the 'GlcodeMaster'.
          required: true
          schema:
            $ref: '#/definitions/GlcodeMasterRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: created GlcodeMaster(s) successfully.
          schema:
            $ref: '#/definitions/GlcodeMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /glcodemasters/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a 'GlcodeMaster'.
      parameters:
        - name: GlcodeMaster
          in: body
          description: Request header for the 'GlcodeMaster'.
          required: true
          schema:
            $ref: '#/definitions/GlcodeMasterRequest'
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: update a GlcodeMaster(s) successful.
          schema:
            $ref: '#/definitions/GlcodeMasterResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a demand along with its list of demand details. Along with tenantId, any one parameter is mandatory. In case search is performed based on the demand amounts, then demandFrom and demandTo parameters will be mandatory. When both demandFrom and demandTo parameters are passed, the type parameter will be mandatory.
        By default results will be sorted by fromDate
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: demandId
          in: query
          description: Id(s) of the Demand(s) to be returned
          required: false
          type: array
          items:
            type: string
        - name: consumerCode
          in: query
          description: Unique identification provided by business details.
          required: false
          type: array
          items:
            type: string
        - name: email
          in: query
          description: Email Id of Primary owner of business detail.
          required: false
          type: string
        - name: mobileNumber
          in: query
          description: Mobile Number of Primary owner of business detail.
          required: false
          type: string
        - name: businessService
          in: query
          description: Billing system details e.g., PropertyTax,Water Charges etc.
          required: true
          type: string
        - name: demandFrom
          in: query
          description: Starting range of the demand amount to be searched for
          required: false
          type: number
          format: double
        - name: demandTo
          in: query
          description: Ending range of the demand amount to be searched for
          required: false
          type: number
          format: double
        - name: type
          in: query
          description: Determines the type of the demand., Ex- Arrears or Current or Dues. This field will be mandatory if both demandFrom and demandTo amounts are sent
          required: false
          #type: string
          type: array
          items:
            type: string
            enum:
            - ARREARS
            - CURRENT
            - DUES
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a demand along with its demand details.
          schema:
            $ref: '#/definitions/DemandResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a demand along with its list of demand details
      parameters:
        - name: demand
          in: body
          description: Request header for the demand.
          required: true
          schema:
            $ref: '#/definitions/DemandRequest'
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Created Demand(s) successfully.
          schema:
            $ref: '#/definitions/DemandResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a demand.
      parameters:
        - name: demand
          in: body
          description: Request header for the demand.
          required: true
          schema:
            $ref: '#/definitions/DemandRequest'
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: updated a collection amount for demand.
          schema:
            $ref: '#/definitions/DemandResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/collection/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a demand. This only for DCB back update. When we update DCB after collection
      parameters:
        - name: demand
          in: body
          description: Request header for the demand.
          required: true
          schema:
            $ref: '#/definitions/DemandRequest'
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: updated a collection amount for demand.
          schema:
            $ref: '#/definitions/DemandResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/_updatemis:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter.
  ######################################################
    post:
      description: Updates a mis data for the demand. As of now this API updates the consumerCode in demand.
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: demandId
          in: query
          description: Id(s) of the Demand(s) to be updated
          required: true
          type: array
          items:
            type: string
        - name: consumerCode
          in: query
          description: Unique identification to be updated, provided by business details.
          required: true
          type: string
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: updated a collection amount for demand.
          schema:
            $ref: '#/definitions/DemandResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /demand/_dues:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns the demand dues for the unique identification(consumercode). The busines service and the consumercode will be mandatory.
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: consumerCode
          in: query
          description: Unique identification provided by business details.
          required: true
          type: string
        - name: businessService
          in: query
          description: Billing system details e.g., PropertyTax(PT),Water Charges(WC) etc.
          required: true
          type: string
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a demand along with its demand details.
          schema:
            $ref: '#/definitions/DemandDueResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'


  /demanddetail/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a demand details
         By default results will be sorted by fromDate of 'Demand' and tax head.
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: demandId
          in: query
          description: Primary key of Demand object.
          required: false
          type: integer
          format: int64
        - name: taxHeadCode
          in: query
          description: tax head reason code.
          required: false
          type: string
        - name: periodFrom
          in: query
          description: tax period from date
          required: false
          type: integer
        - name: periodTo
          in: query
          description: tax period to.
          required: false
          type: integer
        - name: detailsId
          in: query
          description: Id(s) of the DemandDetail(s) to be returned
          required: false
          type: array
          items:
            type: string
      tags:
        - Demand
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a demand along with its demand details.
          schema:
            $ref: '#/definitions/DemandDetailResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /bill/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Returns a Bill along with its list of bill details. By default active and non-cancelled bills will be returned when no value passed for active or cancelled. Along with tenantId, any one parameter is mandatory.
        By default results will be sorted by bill creation date
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: billId
          in: query
          description: Id(s) of the Bill(s) to be returned
          required: false
          type: array
          items:
            type: string
        - name: isActive
          in: query
          description: true when active bill required,  when inactive bill required.
          required: false
          type: boolean
        - name: isCancelled
          in: query
          description: true when cancelled bill required, false when non-cancelled bill required.
          required: false
          type: boolean
        - name: billType
          in: query
          description: Bill type. AUTO or MANUAL
          required: false
          type: string
        - name: consumerCode
          in: query
          description: A unique identification for a billing entity.
          required: false
          type: string
        - name: service
          in: query
          description: Name of the business service for which 'TaxHeadMaster' to be returned.
          required: true
          type: string
      tags:
        - Bill
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns a Bill along with its bill details.
          schema:
            $ref: '#/definitions/BillResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /bill/_generate:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      description: Creates a Bill for collections. By default active bill will be created. Along with tenantId, any one parameter is mandatory. The bill type is AUTO here.
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: demandId
          in: query
          description: Primary key of Demand object.
          required: false
          type: integer
          format: int64
        - name: consumerCode
          in: query
          description: A unique identification for a billing entity.
          required: false
          type: string
        - name: businessService
          in: query
          description: Billing system details e.g., PropertyTax,Water Charges etc.
          required: false
          type: string
        - name: email
          in: query
          description: Email Id of Primary owner of business detail.
          required: false
          type: string
        - name: mobileNumber
          in: query
          description: Mobile number of Primary owner of business detail.
          required: false
          type: string
      tags:
        - Bill
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Creates a Bill along with its bill details. Ex- If search is done using mobile number, combined bill will be generated, having information for each of the services(ex-Property tax, Water charges)
          schema:
            $ref: '#/definitions/BillResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /bill/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a bill along with its list of bill details. The bill type is MANUAL here.
      parameters:
        - name: bill
          in: body
          description: Request header for the bill.
          required: true
          schema:
            $ref: '#/definitions/BillRequest'
      tags:
        - Bill
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Created Bill(s) successfully.
          schema:
            $ref: '#/definitions/BillResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /bill/_apportion:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Amount will be apportioned based on whether apportioning is required or not for the business service. Billing service will query the BusinessServiceDetails to fetch the required details
  ######################################################
    post:
      summary: Apportion Paid Amount.
      description: This API is used to apportion the paid amount.
      parameters:
        - name: billInfo
          in: body
          description: Request to update the demand details with the receipt info.
          required: true
          schema:
            $ref: '#/definitions/BillRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Bill
      responses:
        '200':
          description: Paid Amount Apportioned successfully.
          schema:
            $ref: '#/definitions/BillResponse'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

definitions:
  Demand:
    type: object
    description: A Object which holds the basic info about the revenue assessment for which the demand is generated like module name, consumercode, owner, etc.
    properties:
      id:
        type: integer
        format: int64
        description: primary key of a demand.
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      consumerCode:
        type: string
        description: Unique identification of billing entity.
      consumerType:
        type: string
        description: Consumer type of billing entity.
      businessService:
        type: string
        description: Billing system e.g., Property Tax, Water Charges etc.
        maxLength: 256
        minLength: 4
      owner:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/egov-user/contracts/v1-1-0.yml#/definitions/User'
      taxPeriodFrom:
        type: string
        format: date
        description: start date from when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      taxPeriodTo:
        type: string
        format: date
        description: end date till when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      demandDetails:
        type: array
        items:
          $ref: '#/definitions/DemandDetails'
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      minimumAmountPayable:
        type: number
        format: double
        description: Minimum bill amount to be paid.
    required:
      - taxPeriodFrom
      - taxPeriodTo
      - demandDetails
      - consumerCode
      - businessService
      - minimumAmountPayable
      - tenantId

  DemandDetails:
    type: object
    description: A object holds a demand and collection values for a tax head and period.
    properties:
      id:
        type: integer
        format: int64
        description: primary key of a DemandDetails.
      taxHead:
        type: string
        description: Tax Head code.
        maxLength: 64
        minLength: 2
      taxAmount:
        type: number
        format: double
        description: demand amount.
      collectionAmount:
        type: number
        format: double
        default: 0
        description: collection against taxAmount.
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
    required:
      - taxHead
      - taxAmount
      - collectionAmount
      - tenantId

  DemandDue:
    type: object
    description: The object holds the demand, collection and balance information, along with list of demands.
    properties:
      consolidatedTax:
        $ref: '#/definitions/ConsolidatedTax'
      demands:
        type: array
        items:
          $ref: '#/definitions/Demand'

  ConsolidatedTax:
    type: object
    description: The object holds the demand, collection and balance information for the current and arrear tax periods.
    properties:
      arrearsDemand:
        type: number
        format: double
        description: demand amount of arrear taxperiods(s).
      arrearsCollection:
        type: number
        format: double
        description: collection amount of arrear taxperiods(s).
      arrearsBalance:
        type: number
        format: double
        description: balance amount of arrear taxperiods(s).
      currentDemand:
        type: number
        format: double
        description: demand amount of current taxperiod.
      currentCollection:
        type: number
        format: double
        description: collection amount of current taxperiod.
      currentBalance:
        type: number
        format: double
        description: balance amount of current taxperiod.


  TaxHeadMaster:
    type: object
    description: A object holds a tax heads for each reason category and service along with glcodes for financial posting, for example General tax, Edu cess, lib cess for TAX.
    properties:
      id:
        type: integer
        format: int64
        description: primary key of a TaxHeadMaster.
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      category:
        type: string
        description: Category of demand like tax, fee, rebate, penalty etc.
        enum:
          - TAX
          - FEE
          - CHARGES
          - REBATE
          - ADVANCE_COLLECTION
          - PENALTY
          - FINES
      service:
        type: string
        description: Service for which the Tax Head is defined.
        maxLength: 64
        minLength: 2
      name:
        type: string
        description: Tax Head name.
        maxLength: 64
        minLength: 2
      code:
        type: string
        description: Tax Head code.
        maxLength: 64
        minLength: 2
      glcodes:
        type: array
        items:
          $ref: '#/definitions/GlcodeMaster'
      order:
        type: integer
        format: int64
        description: Order of the tax heads in which the collection has to be done.
      isDebit:
        type: boolean
        description: Particular demand goes as credit or debit.
        default: false
      isActualDemand:
        type: boolean
        description: true for tax/charges/penalty, false for advances(if any).
      validFrom:
        type: string
        format: date
        description: start date from when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      validTill:
        type: string
        format: date
        description: end date till when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
    required:
      - name
      - category
      - tenantId
      - service
      - validFrom
      - validTill

  GlcodeMaster:
    type: object
    description: A object holds a glcode for a tax head for financial posting
    properties:
      id:
        type: integer
        format: int64
        description: primary key of a GlcodeMaster.
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      taxHead:
        type: string
        description: Tax head for which the glcode is.
      service:
        type: string
        description: Service for which the Tax Head is defined.
        maxLength: 64
        minLength: 2
      glCode:
        type: string
        minLength: 1
        maxLength: 64
        description: A general ledger code for demand head for financial posting.
      fromDate:
        type: integer
        format: int64
        description: Time in epoch, From date for glcode to be applied for tax. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: integer
        format: int64
        description: Time in epoch, To date for glcode to be applied for tax. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
    required:
      - id
      - tenantId
      - taxHead
      - service
      - glCode
      - fromDate
      - toDate

  TaxPeriod:
    type: object
    description: An object which holds the tax period info
    properties:
      id:
        type: integer
        format: int64
        description: Id of the bill
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      periodCycle:
        type: string
        format: int64
        description: A period cycle. One business service can have multiple period cycles.
        enum:
          - MONTH
          - QUARTER
          - HALFYEAR
          - ANNUAL
      fromDate:
        type: integer
        format: int64
        description: Time in epoch, Start date for tax period
      toDate:
        type: integer
        format: int64
        description: Time in epoch, End date for tax period
      service:
        type: string
        description: Name of the module this period belongs to.
      code:
        type: string
        description: Description/Code of a tax period.
      financialYear:
        type: string
        description: Financial year for which this period belongs.
      auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - id
      - tenantId
      - fromDate
      - toDate
      - service
      - code

  Bill:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Id of the bill
      type:
        type: string
        format: int64
        description: Type of a bill auto or manual.
        enum:
          - AUTO
          - MANUAL
      payeeName:
        type: string
        description: Consumer name for whom the bill is generated.
      payeeAddress:
        type: string
        description: Consumer address for whom the bill is generated.
      payeeEmail:
        type: string
        description: Consumer email for whom the bill is generated.
      isActive:
        type: boolean
        description: true when active bill is created, false when inactive bill is created.
      isCancelled:
        type: boolean
        description: true when cancelled bill is cancelled, false when non-cancelled bill is created.
      billDetails:
        type: array
        items:
          $ref: '#/definitions/BillDetails'
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - payeeName
      - tenantId

  BillDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Id of bill details
      businessService:
        type: string
        description: BusinessService code.
      billNumber:
        type: string
        description: Bill number.
      billDate:
        type: string
        format: date
        description: Bill date.
      consumerCode:
        type: string
        description: Consumer code of the entity for which the bill is being created.
      consumerType:
        type: string
        description: Type of the entity for which the bill is being created.
      billDescription:
        type: string
        description: Description from the billing system.
      displayMessage:
        type: string
        description: Additional information from the billing system.
      minimumAmount:
        type: number
        format: double
        description: Minimum bill amount to be paid.
      totalAmount:
        type: number
        format: double
        description: Total bill amount to be paid.
      collectionModesNotAllowed:
        type: array
        items:
          type: string
        description: List of collection modes not allowed.
      callBackForApportioning:
        type: boolean
        description: true if call back for apportioning is required, false if call back for apportioning is not required.
      partPaymentAllowed:
        type: boolean
        description: true if part payment allowed, false if part payment is not allowed.
      billAccountDetails:
        type: array
        items:
          $ref: '#/definitions/BillAccountDetails'
    required:
      - businessService
      - consumerCode
      - billDate
      - totalAmount

  BillAccountDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Id of bill account details
      glcode:
        type: string
        description: Chart of account code.
      order:
        type: integer
        format: int32
        description : Order number used for apportioning amount in case of part payment.
      accountDescription:
        type: string
        description : Account description to be printed on receipt.
      crAmountToBePaid:
        type: number
        format: double
        description: Credit account head amount to be paid.
      creditAmount:
        type: number
        format: double
        description: Credit account head amount.
      debitAmount:
        type: number
        format: double
        description: Debit account head amount.
      isActualDemand:
        type: boolean
        description: True for tax/charges/penalty. False for advances(if any).
      purpose:
        type: string
        description: Purpose of Account head.
        enum:
         - ARREAR_AMOUNT
         - CURRENT_AMOUNT
         - ADVANCE_AMOUNT
         - ARREAR_LATEPAYMENT_CHARGES
         - CURRENT_LATEPAYMENT_CHARGES
         - CHEQUE_BOUNCE_PENALTY
         - REBATE
         - OTHERS
    required:
      - glcode
      - accountDescription

  BusinessServiceDetails:
    type: object
    description: The object holds the configuration details for each business service. If callBackForApportioning is true, then value for callBackApportionURL should be sent mandatorily.
    properties:
      id:
        type: integer
        format: int64
        description: Id of the bill
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
      name:
        type: string
        description: BusinessService name.
        maxLength: 128
        minLength: 4
      businessService:
        type: string
        description: BusinessService code.
      collectionModesNotAllowed:
        type: array
        items:
          type: string
        description: List of collection modes not allowed.
      callBackForApportioning:
        type: boolean
        description: true if call back for apportioning is required, false if call back for apportioning is not required.
      callBackApportionURL:
        type: string
        description: Provides the URL for Apportioning
      partPaymentAllowed:
        type: boolean
        description: true if part payment allowed, false if part payment is not allowed.
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
    required:
      - id
      - tenantId
      - businessService

  CollectedReceipts:
    type: object
    description: A object holds a payment information against a demand.
    properties:
      id:
        type: integer
        format: int64
        description: Id of the bill
      businessService:
        type: string
        description: BusinessService code.
      consumerCode:
        type: string
        description: Consumer code of the entity for which the bill is being created.
      receiptNumber:
        type: string
        description: receipt number.
      receiptAmount:
        type: number
        format: double
        description: receipt amount.
      receiptDate:
        type: string
        format: date
        description: discount against taxAmount.
      status:
        type: string
        description: receipt status
        enum:
          - CREATED
          - CANCELLED
          - INSTRUMENT_BOUNCED
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant
        maxLength: 128
        minLength: 4
    required:
      - receiptNumber
      - receiptAmount
      - receiptDate
      - tenantId

  DemandRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      Demand:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/Demand'
    type: object

  DemandResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      Demands:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/Demand'
    type: object

  DemandDetailResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      DemandDetails:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/DemandDetails'
    type: object

  DemandDueResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      DemandDue:
          $ref: '#/definitions/DemandDue'
    type: object


  BillRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      BillInfos:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/Bill'
    type: object

  BillResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      BillInfos:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/Bill'
    type: object

  BusinessServiceDetailRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      businessServiceDetails:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/BusinessServiceDetails'
    type: object

  BusinessServiceDetailResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      businessServiceDetails:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/BusinessServiceDetails'
    type: object

  TaxHeadMasterRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      taxHeadMasters:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/TaxHeadMaster'
    type: object

  TaxHeadMasterResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      taxHeadMasters:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/TaxHeadMaster'
    type: object

  GlcodeMasterRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      glcodeMasters:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/GlcodeMaster'
    type: object

  GlcodeMasterResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      glcodeMasters:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/GlcodeMaster'
    type: object

  TaxPeriodRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      taxPeriods:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/TaxPeriod'
    type: object

  TaxPeriodResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      taxPeriods:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/TaxPeriod'
    type: object
