swagger: '2.0'
info:
  title: Asset API
  description: >-
    EGov Asset Management aims to improve the efficiency of the Asset Management
    operations in the ULB.This document covers. <h2><b> </br>1.Create New Immovable, Movable and Land Asset for any Asset Category. </br>2. Search for Asset
    based on search parameter. </br>3. Revalution of existing asset. </br>4.
    Search for revaluated asset. </br>5. Sale/Dispose of an existing asset.
    </br>6. Search for Sale/Disposed asset. </br>7. Get current value of an
    asset. </br>8. Depreciation of existing assets.</br>
  contact:
    name: kaviyarasan
    email: kaviyarasan.p@riflexions.com
  version: 1.0.0
basePath: /asset-services-maha/
paths:
  /assets/_search:
    post:
      summary: Get list of Assets based on below search parameter(s).
      description: |
        Provides a list of asset(s) for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId
        - name: id
          in: query
          description: >-
            Pass List of Unique Asset id(s) then the API will returns list of
            asset. Maximum length of the input list is 100.
          required: false
          type: array
          items:
            type: integer
          format: int64
          maxItems: 100
        - name: name
          in: query
          description: Name  of the asset.
          required: false
          type: string
          format: varchar
        - name: code
          in: query
          description: Unique Asset code.
          required: false
          type: string
          format: varchar
        - name: assetCategory
          in: query
          description: Asset Category id of the parent category to which subcategory belongs.
          required: false
          type: integer
          format: int64
        - name: assetSubCategory
          in: query
          description: Asset Category id.
          required: false
          type: integer
          format: int64
        - name: department
          in: query
          description: Department id of the Asset.
          required: false
          type: integer
          format: int64
        - name: orignalValueFrom
          in: query
          description: min amount of asset original value, all the assets having origanl value above this value will be fetched.
          required: false
          type: number
          format: bigdecimal
        - name: orignalValueTo
          in: query
          description: max amount of asset original value, all the assets having origanl value lower this value will be fetched.
          required: false
          type: number
          format: bigdecimal
        - name: assetCreatedFrom
          in: query
          description: min value of asset created date, all the assets created after this date will be fetched .
          required: false
          type: integer
          format: int64
        - name: assetCreatedTo
          in: query
          description: max value of asset created date, all the assets created before this date will be fetched.
          required: false
          type: integer
          format: int64
        - name: locality
          in: query
          description: locality of the asset.
          required: false
          type: integer
          format: int64
        - name: zone
          in: query
          description: zone of the asset.
          required: false
          type: integer
          format: int64
        - name: revenueWard
          in: query
          description: Revenue Ward of the asset.
          required: false
          type: integer
          format: int64
        - name: block
          in: query
          description: block of the asset.
          required: false
          type: integer
          format: int64
        - name: street
          in: query
          description: street of the asset.
          required: false
          type: integer
          format: int64
        - name: electionWard
          in: query
          description: Election Ward of the asset.
          required: false
          type: integer
          format: int64
        - name: doorNo
          in: query
          description: Door No of the asset.
          required: false
          type: string
        - name: isTransactionHistoryRequired
          in: query
          description: isTransactionHistoryRequired when true return the transaction history of the asset used only in asset search.
          required: false
          type: boolean
        - name: codes
          in: query
          description: >-
            Pass List of Unique Asset codes(s) then the API will returns list of
            asset.
          required: false
          type: array
          items:
            type: string
          format: varchar
        - name: categoryName
          in: query
          description: Name  of the assetCaregory.
          required: false
          type: string
          format: varchar
        - name: status
          in: query
          description: Asset status description.
          required: false
          type: string
          format: varchar
        - name: transaction
          in: query
          description: >-
            Pass List of  Asset transaction type(s) then the API will return assets whose status is  not DISPOSED
          required: false
          type: array
          items:
           type: string
           format: varchar

        - $ref: '#/parameters/sortAssets'
      tags:
        - Asset
      responses:
        '200':
          description: 'Successful response, returns list of Asset(s).'
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/_create:
    post:
      summary: Create New Asset of type Movable, Immovable and Land.
      description: >-
        The asset master is the database of all the assets owned by the ULB.
        Each asset belongs to a category. The attributes of the asset category
        are inherited by the assets within that category.
      parameters:
        - name: Asset
          in: body
          description: Details for the new Asset.
          required: true
          schema:
            $ref: '#/definitions/AssetRequest'
      tags:
        - Asset
      responses:
        '201':
          description: Asset created sucessfully.
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/_update:
    post:
      summary: Update existing Asset for type Land, movable and immovable.
      description: >-
        The asset master is the database of all the assets owned by the ULB.
        Each asset belongs to a category. The attributes of the asset category
        are inherited by the assets within that category. This API allow user to
        update the existing asset property.
      parameters:
        - name: Asset
          in: body
          description: Details for the new Asset.
          required: true
          schema:
            $ref: '#/definitions/AssetRequest'
      tags:
        - Asset
      responses:
        '201':
          description: Asset Updated Successfully.
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/revaluation/_search:
    post:
      summary: Get list of revaluated Assets based on search parameter(s).
      description: |
        Provides a list of asset for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: id
          in: query
          description: >-
            Pass List of Unique Revaluation id then the API will returns list of
            Revaluated asset. Maximum length of the input list is 100.
          required: false
          type: array
          items:
            type: integer
          format: int64
          maxItems: 100
        - name: assetId
          in: query
          description: >-
            Pass List of Unique Asset id then the API will returns list of
            Revaluated asset. Maximum length of the input list is 100.
          required: false
          type: array
          items:
            type: integer
          format: int64
          maxItems: 100
        - name: fromDate
          in: query
          description: >-
            Get revaluted asset from Date of revaluation. mandatory if todate is
            not null.
          required: false
          type: integer
          format: int64
        - name: toDate
          in: query
          description: get all the asset revaluation items that are revaluated till toDate.
          required: false
          type: integer
          format: int64
      tags:
        - Revaluation
      responses:
        '200':
          description: >-
            Successful response, returns list Revaluation Details of Revaluated
            Asset.
          schema:
            $ref: '#/definitions/RevaluationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/revaluation/_create:
    post:
      summary: Revaluate the asset.
      description: >
        1.Revaluate the asset, after revaluation asset value of the asset will
        be change, it can be increase or decrease.

        2.Revaluation is applicable if the asset status is Capitalized.
      parameters:
        - name: Revaluation
          in: body
          description: Details of Revaluation.
          required: true
          schema:
            $ref: '#/definitions/RevaluationRequest'
      tags:
        - Revaluation
      responses:
        '201':
          description: Asset is Revaluated successfully.
          schema:
            $ref: '#/definitions/RevaluationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/dispose/_create:
    post:
      summary: Asset Sale/Disposal.
      description: >
        1. Prior to disposal of an asset, asset will be depreciated.

        2. On save the amount should be calculated on a pre-rated basis (actual
        depreciation for the year).

        3. Assets in Capitalized status can only be sold or disposed.

        4. Once an Asset disposal/sale is completed [Approved], system will mark
        the asset status as ‘Disposed’.
      parameters:
        - name: Disposal
          in: body
          description: Details of Disposal/Sale.
          required: true
          schema:
            $ref: '#/definitions/DisposalRequest'
      tags:
        - Disposal
      responses:
        '201':
          description: Asset is sold or disposed.
          schema:
            $ref: '#/definitions/DisposalResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/dispose/_search:
    post:
      summary: Get list of disposed Assets based on search parameter(s).
      description: |
        Provides a list of asset for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: id
          in: query
          description: >-
            Pass List of Unique Disposal id then the API will returns list of
            disposed asset. Maximum length of the input list is 100.
          required: false
          type: array
          items:
            type: integer
          format: int64
          maxItems: 100
        - name: assetId
          in: query
          description: >-
            Pass List of Unique Asset id then the API will returns list of
            dispose asset. Maximum length of the input list is 100. if id list
            is not null then api ignore assetid.
          required: false
          type: array
          items:
            type: integer
          format: int64
          maxItems: 100
        - name: fromDate
          in: query
          description: >-
            Get dispose/Sold asset from Date of disposal/sale. it is mandatory
            if todate is not null.
          required: false
          type: integer
          format: int64
        - name: toDate
          in: query
          description: Get all the asset disposal details till to Date.
          required: false
          type: integer
          format: int64
      tags:
        - Disposal
      responses:
        '200':
          description: >-
            Successful response, returns list Disposal/Sale Details of
            disposed/sold Asset.
          schema:
            $ref: '#/definitions/DisposalResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/depreciations/_create:
    post:
      summary: Asset Depreciation.
      description: >
        1. Depreciation is the process which decreases the value of the assets
        over a period of time based on depreciation rate.

        2. Every asset has got its own life span and it gets depreciated every
        day based on the type of asset.

        3. Assets in Capitalized status can only be depreciated.

        4. Asset which has the category Land should not be depreciated.

        5. Asset which has the capitalised value as Rs.X/- should not be
        depreciated- Keep this value as application configuration.

        6. Only straight line method of depreciation is supported.

        7.Depreciation should consider Revaluation value as per SLV(Straight
        Line Value) method.(ie the current value of the asset after improvements
        or revaluation has to be added with all the depreciations previously
        done on the asset and the depreciation percetage should be calculated
        from the added value and the depreciation has to be done on the current
        value.)
      parameters:
        - name: Depreciation
          in: body
          description: Details of Depreciation.
          required: true
          schema:
            $ref: '#/definitions/DepreciationRequest'
      tags:
        - Depreciation
      responses:
        '201':
          description: Asset is Depreciated successfully.
          schema:
            $ref: '#/definitions/DepreciationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/depreciations/_search:
    post:
      summary: Get list of all depreciated asset(s).
      description: >
        provide asset category type and asset category name or asset category
        tree or asset name will give list of all the depreciated assets.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: assetCategoryType
          in: query
          description: |
            asset category type
          required: true
          type: string
          format: varchar
        - name: assetCategoryName
          in: query
          description: |
            asset category name
          required: true
          type: string
          format: varchar
        - name: assetCategoryTree
          in: query
          description: |
            asset category tree
          required: false
          type: string
          format: varchar
        - name: assetName
          in: query
          description: |
            asset name
          required: false
          type: string
          format: varchar
      tags:
        - Depreciation
      responses:
        '200':
          description: 'Successful response, all depreciated assets.'
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/currentvalue/_search:
    post:
      summary: Get Current value of the asset.
      description: |
        provide asset id,that API will return asset current value.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: assetId
          in: query
          description: >-
            pass asset id in query param, the api will return current value of
            the asset.
          required: true
          type: integer
          format: int64
      tags:
        - AssetCurrentValue
      responses:
        '200':
          description: 'Successful response, Current value of the asset.'
          schema:
            $ref: '#/definitions/AssetCurrentValueResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
  /assets/currentvalue/_create:
    post:
      summary: Create Asset Current Value.
      description: Create the current value of the asset.
      parameters:
        - name: AssetCurrentValue
          in: body
          description: Details of Asset Current value.
          required: true
          schema:
            $ref: '#/definitions/AssetCurrentValueRequest'
      tags:
        - AssetCurrentValue
      responses:
        '201':
          description: Asset current value is created successfully.
          schema:
            $ref: '#/definitions/AssetCurrentValueResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes

definitions:
  Asset:
    description: Hold the asset specific information.
    type: object
    properties:
      anticipatedLife:
        type: integer
        description: Anticipated life of asset, This value is being calculated by diving 100 by the depreciation rate. for eg if the depreciation rate is 10%, then the anticiapted life will be 100/10 which equals 10years.
        format: int64
      orderNumber:
        type: string
        description: Order number used for creating this asset.
        format: varchar
      orderDate:
        type: integer
        format: int64
        description: Date of the respective order.
      wipReferenceNo:
        type: string
        description: Ref No of WIP(work in progress) Register.
        format: varchar
      acquiredFrom:
        type: string
        description: Asset is acquired from which party is tracked here.
        format: varchar
      warrantyAvailable:
        type: boolean
        description: If Warranty available for the given asset the value will be true, else it will be false.
        format: boolean
      warrantyExpiryDate:
        type: integer
        format: int64
        description: Date of the expiry of warranty. This will be required in case warranty available is true.
      defectLiabilityPeriod:
        $ref: '#/definitions/DefectLiability'
      securityDepositRetained:
        type: number
        description: value of the security deposit retained for the Work order
        format: bigdecimal
      securityDepositRealized:
        type: number
        description: value of the security deposit realized for the work order
        format: bigdecimal
      acquisitionDate:
        type: integer
        format: int64
        description: Date of the Acquisition of the asset.
      originalValue:
        type: number
        format: bigdecimal
        description: >-
          value of the asset when it was created originally, will be same as
          gross value if the asset is being created from the system.
      assetAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Fixed Asset", this account field is mandatory only when the voucher enabled is true, the voucher enabled flag can be accesed from the mdms(master data service).
      accumulatedDepreciationAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Accumulated Depreciation", this account field is mandatory only when the voucher enabled is true, the voucher enabled flag can be accesed from the mdms(master data service).
      revaluationReserveAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Revaluation Reserve Account", this account field is mandatory only when the voucher enabled is true, the voucher enabled flag can be accesed from the mdms(master data service).
      depreciationExpenseAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Depreciation Expense Account", this account field is mandatory only when the voucher enabled is true, the voucher enabled flag can be accesed from the mdms(master data service).
      titleDocumentsAvalable:
        type: array
        items:
          type: string
          format: string
        description: names of the title documents available for the particular asset, values will be entered in comma separated format. For example- Fire NOC, Sale Deed
      locationDetails:
        $ref: '#/definitions/Location'
      totalArea:
        type: number
        description: Total area of Land on which the asset is located. This will be calculated based on the land asset that is associated with this. If one asset falls across multiple land, the the total area will be the sum total of all the areas of the respective land.
        format: double
      address:
        type: string
        description: Addess of the asset.
      longitude:
        type: number
        description: longitude coordinate of asset location.
        format: double
      latitude:
        type: number
        description: latitude coordinate of asset location.
        format: double
      quantity:
        type: integer
        format: int64
        description: No of assets being created.
      tenantId:
        type: string
        description: Unique id for ulb.
        format: varchar
      id:
        description: Unique id for the asset. This will be auto generated.
        type: integer
        format: int64
      name:
        type: string
        description: Name of the Asset.
        format: varchar
      code:
        type: string
        description: >-
          Unique code for the asset. This will be auto generated. The format of the code will be <ULB_NAME>/<Depratmentcode>/<assetCategoryCode>/running sequence (for eg- mh.roha/REV/Building/12).
        format: varchar
      oldCode:
        type: string
        description: >-
          This is the asset code as per the legacy system. This will be applicable when doing legacy data entry.
        format: varchar
      department:
        $ref: '#/definitions/Department'
      assetCategory:
        $ref: '#/definitions/AssetCategory'
      modeOfAcquisition:
        $ref: '#/definitions/ModeOfAcquisition'
      status:
        type: string
        description: This shows the current status of the asset.
        format: varchar
      grossValue:
        type: number
        format: bigdecimal
        description: >-
          current written down value of the asset when being created or brought
          in to the system. This will be same as the original value for the
          newly created assets.
      accumulatedDepreciation:
        type: number
        format: bigdecimal
        description: Total value of the depreciation already applied on this asset will be the accumulated depreciation.
      description:
        type: string
        description: detailed description of asset
        format: varchar
      dateOfCreation:
        type: integer
        format: int64
        description: Date of asset creation in the books.
      remarks:
        type: string
        description: Any asset remarks.
        format: varchar
      version:
        type: string
        description: version of the assetcategory for which asset is created. This is an internal field.
        format: varchar
      assetReference:
        description: Parent asset id of an asset. This will be used when we want to link all the shops inside a shopping complex. Here both shop and shopping complex are distict assets.
        type: integer
        format: int64
      enableYearWiseDepreciation:
        description: >-
          Enable the year wise Depreciation for an asset. if the value is true
          then refer the Depreciation rate from yearWiseDepreciationRate object
          else refer to depreciationRate of asset.
        type: boolean
        format: boolean
      assetAttributes:
        type: array
        items:
          $ref: '#/definitions/Attributes'
      depreciationRate:
        type: number
        format: double
        description: >-
          Asset level depreciation rate, if enableYearWiseDepreciation is false
          then check for depreciation rate from this field.
      yearWiseDepreciationRate:
        type: array
        description: >-
          Multiple rows can be specified for each  asset category, but there
          should not be an overlap in the rates for the same financial year.It
          is required if enableYearWiseDepreciation is true, if
          enableYearWiseDepreciation if false then refer Depreciation from
          depreciationRate of asset.
        items:
          $ref: '#/definitions/YearWiseDepreciation'
      fundSource:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/financials/contracts/egf-master/v1-0-0.yml#/definitions/Fundsource
        description: only code is mandatory for the FundSource object while asset is created.
      location:
        type: string
        format: varchar
        description: Location of the Asset
      openingDate:
        type: integer
        format: int64
        description: The date on which the opening written down value is been captured. This will be applicable for legacy asset data entry. In case of new assets this date is not relevant. This will be same as the date of entry.
      landDetails:
        type: array
        description: One asset can be located in one or more land. These land are assets captured in the same entity.
        items:
          $ref: '#/definitions/LandDetails'
      transactionHistory:
        type: array
        format: varchar
        description: This field is required to capture transaction history of the asset thisfield is used only in search.
        items:
          $ref: '#/definitions/TransactionHistory'


    required:
      - name
      - department
      - assetCategory
      - grossValue
      - originalValue
      - description
      - dateOfCreation
      - acquisitionDate
      - address


  Attributes:
    type: object
    description: >-
      Additional information of the asset.Hold the data for dynamic custom field
      in JSON format. There key and value will be LABEL NAME and USER INPUT DATA
      respactively.
    properties:
      key:
        type: string
        description: LABEL Name or Table name.
        format: varchar
      type:
        type: string
        description: type of the field.
        format: varchar
      value:
        type: object
        description: >-
          value of the field(if data type is text the value will be string, if
          data type is multivaluelist then value will be list, if datatype is
          table then value will be the key value pair where key is  column name
          and value is column value).
        format: varchar
  LandDetails:
    type: object
    description: Details of the land asset on which the immovable assets are build. This details will be available only for immovable assets.
    properties:
      surveyNo:
        type: string
        format: varchar
        description: land survey number of the land asset
      area:
        type: number
        description: Area of the land.
        format: double
      code:
        type: string
        description: code of the landdetails
        format: varchar
    required:
      - code
      - area
      - surveyNo
  ModeOfAcquisition:
    type: object
    description: This shows the various ways by which an asset can come into the system. The Various values can be - purchased, constructed, acquired and so on.
    properties:
      id:
        type: integer
        format: int64
        description: id fo the object
      tenantId:
        type: string
        description: tenantid of the modeOfAcquisition
        format: varchar
      name:
        type: string
        description: Unique name of the modeOfAcquisition
        format: varchar
      code:
        type: string
        description: Unique code of the modeOfAcquisition
        format: varchar
      isActive:
        type: boolean
        description: states whether the value is active or not.
    required:
      - code


  Department:
    type: object
    description: the department to which the asset belongs,This master data is defined under MDMS and only the code field needs to be sent during creation of asset.
    properties:
      id:
        type: integer
        format: int64
        description: Unique identifier of the department
      name:
        type: string
        description: Name of the department.
        format: varchar
      code:
        type: string
        description: Department code.
        format: varchar

  AssetCategory:
    type: object
    description: Assets are calssified under various asset categories based on their properties. This master data is defined under MDMS.
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
        format: varchar
      id:
        type: integer
        format: int64
        description: Unique identifier of Category
      name:
        type: string
        description: Name of the Asset Category.
        format: varchar
      code:
        type: string
        description: >-
          Unique code for the asset category.  This will be auto generated or
          specified by the user based on implementation specific requirement.
        format: varchar
      assetCategoryType:
        type: string
        description: Asset Category Type information.
        enum:
          - LAND
          - MOVABLE
          - IMMOVABLE
      parent:
        type: integer
        format: int64
        description: >-
          Options will be the already created list of asset category in the
          master.
      isDepreciationApplicable:
        type: boolean
        description: >-
          if value is true then we can add depreciaiton percentage will need to
          be captured.
        format: boolean
      depreciationMethod:
        type: string
        description: Depreciation Method of asset for this asset category.
        enum:
          - Straight Line Method
      isAssetAllow:
        type: boolean
        description: >-
          if value is true then we can add asset directly in this particular
          category.
        format: boolean
      assetAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Fixed Asset".
      accumulatedDepreciationAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Accumulated Depreciation".
      revaluationReserveAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Revaluation Reserve Account".
      depreciationExpenseAccount:
        type: string
        format: string
        description: >-
          Options are from the  chart of account master for the account code
          purpose "Depreciation Expense Account".
      unitOfMeasurement:
        type: string
        format: string
        description: The unique cide of the unit of measurement that has to be used when referring any assets coming under this category. This will come from the UOM master in MDMS.
      version:
        type: string
        description: version of the asset category.
        format: varchar
      depreciationRate:
        type: integer
        format: double
        description: >-
          Depreciation rate for a asset category. That will be always defined in percentage. This value is required for all categories other than  the Asset category type "Land".
      assetFieldsDefination:
        type: array
        items:
          $ref: '#/definitions/AttributeDefinition'
        description: Custom Fields.
    required:
      - assetCategoryType
      - name
      - unitOfMeasurement

  YearWiseDepreciation:
    description: Year wise depreciation details of asset
    type: object
    properties:
      depreciationRate:
        type: integer
        format: double
        description: 'Rate of Depreciation for asset , It will be a float value.'
      financialYear:
        type: string
        description: >-
          Required if depreciation rate is specified,Options are the list of
          financial years.
        format: varchar
      assetId:
        type: integer
        format: int64
        description: id of the asset for which depreciation is required.
      usefulLifeInYears:
        type: integer
        format: int64
        description: Calculated value based on the percentage.
    required:
      - depreciationRate
      - financialYear
      - assetId

  TransactionHistory:
    description: Transaction  details of asset
    type: object
    properties:
      transactionDate:
        type: integer
        format: int64
        description: 'transaction date of the asset'
      transactionAmount:
        type: number
        format: bigdecimal
        description: 'transaction amount of the asset'
      valueBeforeTransaction:
        type: number
        format: bigdecimal
        description: 'value of the asset before transaction'
      valueAfterTransaction:
        type: number
        format: bigdecimal
        description: 'value of the asset after transaction'
      transactionType:
        type: string
        description: >-
          Transaction type revaluation or depreciation.
          value as .
        enum:
          - REVALUATION
          - DEPRECIATION



  DefectLiability:
    description: Hold the asset defect liability related information. Defect liability can be measured in years, months and days.
    type: object
    properties:
      year:
        type: integer
        format: int64
        description: Number of years.
      month:
        type: integer
        format: int64
        description: Number of months.
      day:
        type: integer
        format: int64
        description: Number of days.


  AssetConfiguration:
    description: Hold the asset Configuration specific information, These values will be obtained from MDMS service.
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: unique id.
      keyname:
        type: string
        format: string
        description: name of the configuration.
      description:
        type: string
        format: string
        description: describes the particular config obejct and its purpose.
      tenantid:
        type: string
        format: string
        description: holds the tenant id info.
      values:
        type: array
        items:
          $ref: '#/definitions/AssetConfigurationValue'

  AssetConfigurationValue:
    description: Hold the asset Configuration value for specific key.
    type: object
    properties:
      value:
        type: string
        format: string
        description: contains the value for the respective key.
      effectiveFrom:
        type: integer
        format: int64
        description: contains epoch value of date from whicht the value will be taken into consideration.


  Location:
    description: Hold the asset location specific information.
    type: object
    properties:
      locality:
        type: integer
        format: int64
        description: Boundary location id.
      zone:
        type: integer
        format: int64
        description: Boundary zone id.
      revenueWard:
        type: integer
        format: int64
        description: Boundary revenueward id.
      block:
        type: integer
        format: int64
        description: Boundary blick id.
      street:
        type: integer
        format: int64
        description: Boundary street id.
      electionWard:
        type: integer
        format: int64
        description: Boundary election ward id.
      doorNo:
        type: string
        description: Boundary door number.
      pinCode:
        type: integer
        format: int64
        description: pin code of the location.

  Revaluation:
    description: On a periodic basis assets will be revaluated wherin the value of the asset may decrease or increase. This entity stores the revaluation information of the asset.
    type: object
    properties:
      remarks:
        type: string
        format: string
        description: remarks to be given by the user for the revaluation.
      orderNumber:
        type: string
        description: The order number issued for this revaluation.
        format: varchar
      orderDate:
        type: integer
        format: int64
        description: Date of the respective order.
      tenantId:
        type: string
        description: Unique id for ulb.
      id:
        description: Unique id for the Revaluation.  This will be auto generated.
        type: integer
        format: varchar
      assetId:
        description: Unique id of asset that is been revaluated.
        type: integer
        format: int64

      currentCapitalizedValue:
        type: integer
        format: double
        description: Current value of the asset.
      typeOfChange:
        type: string
        description: If the value is made more than what its present then its INCREASE, if the value is made less than what it is at present then type of change will be DECREASE.
        enum:
          - INCREASED
          - DECREASED
      revaluationAmount:
        type: integer
        format: double
        description: The amount by which the value is increased/decreased.
      valueAfterRevaluation:
        type: integer
        format: double
        description: Value of the asset after the revaluation process.
      revaluationDate:
        type: integer
        format: int64
        description: Date of revaluation. ( past or current date).
      revaluatedBy:
        type: string
        description: Name of the person who has done the revaluation.
        format: varchar
      reasonForRevaluation:
        type: string
        description: The reason why the revaluation is done.
        format: varchar
      voucherReference:
        type: string
        format: string
        description: >-
          The unique voucher number of the voucher that is getting created as part of revaluation of the asset.
      fixedAssetsWrittenOffAccount:
        type: string
        format: string
        description: >-
          The chartofaccount code that is used for accounting which is based on
          specific account code purpose "Fixed Assets Written Off".
      function:
        type: string
        format: string
        description: Unique code from function master. This value is required only when financial integration is enabled.
      fund:
        type: string
        format: string
        description: >-
          Unique code from the fund master. This value will be required if financial integration is enabled.
      scheme:
        type: string
        format: string
        description: Unique code from the scheme master.This value will be required if financial integration is enabled.
      subScheme:
        type: string
        format: string
        description: Unique code from the sub scheme master.This value will be required if financial integration is enabled.

      auditDetails:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails
      status:
        type: string
        description: >-
          Status of the revaluation process which is read from assetstatus
          master for Object name "Revaluation".
        format: varchar
    required:
      - tenantId
      - assetId
      - revaluationAmount
      - orderNumber
      - orderDate

  Disposal:
    description: Holds the Asset Sale/Disposal information.
    type: object
    properties:
      remarks:
        type: string
        format: string
        description: remarks to be given by the user for the disposal.
      orderNumber:
        type: string
        description: The order number issued for the sale or disposal of this asset.
        format: varchar
      orderDate:
        type: integer
        format: int64
        description: Date on which the order was released.
      tenantId:
        type: string
        description: Unique id for ulb.
        format: varchar
      id:
        description: Unique id for the Disposal/Sale.  This will be auto generated.
        type: integer
        format: int64
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      buyerName:
        type: string
        description: The name of the party who is buying the asset.
        format: varchar
      buyerAddress:
        type: string
        description: The address of the party who is buying the asset.
        format: varchar
      disposalReason:
        type: string
        description: Reason for the Asset disposal/Sale.
        format: varchar
      disposalDate:
        type: integer
        format: int64
        description: >-
          Disposal date is the actual date on which the asset was sold or
          disposed. It can be any date other than future date.
      transactionType:
        type: string
        description: >-
          Transaction type sale or Dispose. If user is selling a asset then
          select the value as SALE, if user is disposing a asset then select the
          value as DISPOSAL.
        enum:
          - SALE
          - DISPOSAL
      panCardNumber:
        type: string
        description: >-
          PAN number of the buyer, Applicable If the "transactionType" is SALE.
        format: varchar
      aadharCardNumber:
        type: string
        description: >-
          Aadhar number of the buyer, Applicable If the "transactionType" is SALE.
        format: varchar
      assetcurrentvalue:
        type: integer
        format: double
        description: >-
          calculate the current value of the asset as gross value - accumulated
          depreciation +or- sum(revaulation value) - depreciation value. Allow user
          to modify this value.
      saleValue:
        type: integer
        format: double
        description: The amount for which the asset was sold.

      profLossVoucherReference:
        type: string
        format: string
        description: >-
          The unique voucher id that is getting created as part of SALE/DISPOSAL of the
          asset.
      assetSaleAccount:
        type: string
        format: string
        description: >-
          This is the unique chartofaccount code from Financials.It is populated based on purpose code from financials detailed code master.
      status:
        type: string
        description: >-
          Status of the SALE/DISPOSAL process.
        format: varchar
      auditDetails:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails
    required:
      - disposalReason
      - disposalDate
      - orderNumber
      - orderDate
      - transactionType

  AttributeDefinition:
    description: Hold the Asset dynamic fields details as list of json object.
    type: object
    properties:
      name:
        type: string
        description: name of the custom dynamic field (label name).
        format: varchar
      type:
        type: string
        description: >-
          type of the custom field. Valid types are ('string'[text
          box],'text'[text area],'number'[text box allow numbers
          only],'datetime'[calender],'singlevaluelist'[drop down for single
          value selection],'multivaluelist'[drop down for multi value
          selection],'checkbox','radio','table')
        format: varchar
      isActive:
        type: boolean
        description: >-
          if the value is true then the field will be shown in custom fields of
          asset
        format: boolean
      isMandatory:
        type: boolean
        description: value will be true if field is mandatory otherwise false.
        format: varchar
      values:
        type: string
        description: >-
          comma seprated values we can pass if field type is selected
          as('singlevaluelist','multivaluelist','checkbox','radio').
        format: varchar
      localText:
        type: string
        description: .
      regExFormate:
        type: string
        description: .
      url:
        type: string
        description: >-
          configure if field type are ('singlevaluelist','multivaluelist') and
          @values is null.
      order:
        type: string
        description: order of the table column.
      columns:
        type: array
        items:
          $ref: '#/definitions/AttributeDefinition'
    required:
      - name
      - type
      - isActive

  AssetCurrentValue:
    description: Hold the asset current value information.
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
        format: varchar
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      currentAmount:
        type: integer
        format: double
        description: >-
          calculate the current value of the asset as gross value - accumulated
          depreciation +or- reevaulation value - Depreciation.
      assetTranType:
        type: string
        description: Asset Transaction type which will change the value of the asset.
        format: varchar
        enum:
          - Depreciation
          - Revaluation
      auditDetails:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails

  DepreciationCriteria:
    type: object
    description: Hold Asset Depreciation Request information.
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
        format: varchar
      financialYear:
        type: string
        description: financial year for which assets needs to be depreciate.
        minLength: 8
        maxLength: 20
        format: varchar
      fromDate:
        type: integer
        format: int64
        description: The date from which the depreciation is applicable.
      toDate:
        type: integer
        format: int64
        description: The date till which the depreciation is applicable.
      assetIds:
        type: array
        items:
          type: integer
          format: int64
        description: List of assetId, which are to be depreciated.
      auditDetails:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails
  Depreciation:
    allOf:
      - $ref: '#/definitions/DepreciationCriteria'
    type: object
    description: Hold the Asset Depreciation information.
    properties:
      voucherReference:
        type: string
        format: string
        description: >-
          The unique voucher id that is getting created as part of the asset
          Depreciation.
      depreciationDetails:
        type: array
        items:
          $ref: '#/definitions/DepreciationDetail'
  DepreciationDetail:
    type: object
    description: Hold the Asset Depreciation information.
    properties:
      id:
        description: Unique id of Depreciation. This will be auto generated.
        type: integer
        format: int64
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      status:
        type: string
        description: Depreciation status (Asset is depreciated succesfully of not).
        enum:
          - SUCCESS
          - FAIL
      depreciationRate:
        type: integer
        format: double
        description: 'Rate of depreciation, against which depreciation of asset is done.'
      reasonForFail:
        description: >-
          if the asset depreciation fails for a particular asset the reason will
          be defined here.
        type: string
        format: varchar
      valueBeforeDepreciation:
        type: integer
        format: double
        description: Value of the asset before applying Depreciation.
      depreciationValue:
        type: integer
        format: double
        description: Amount by which asset is get depreciated.
      valueAfterDepreciation:
        type: integer
        format: double
        description: Value of the asset after applying Depreciation.
  AssetRequest:
    properties:
      RequestInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
      Asset:
        $ref: '#/definitions/Asset'
    type: object
    description: Hold the Asset Request information.
  AssetResponse:
    properties:
      ResposneInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
      Assets:
        type: array
        items:
          $ref: '#/definitions/Asset'
    type: object
    description: Hold the Asset Response information.

  RevaluationRequest:
    properties:
      RequestInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
      Revaluation:
        $ref: '#/definitions/Revaluation'
    type: object
    description: Hold the Asset Revaluation Request information.
  RevaluationResponse:
    properties:
      ResposneInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
      Revaluations:
        type: array
        items:
          $ref: '#/definitions/Revaluation'
    type: object
    description: Hold the Asset Revaluation Response information.
  DisposalRequest:
    properties:
      RequestInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
      Disposal:
        $ref: '#/definitions/Disposal'
    type: object
    description: Hold the Asset Disposal Request information.
  DisposalResponse:
    properties:
      ResposneInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
      Disposal:
        type: array
        items:
          $ref: '#/definitions/Disposal'
    type: object
    description: Hold the Asset Disposal Response information.
  DepreciationRequest:
    properties:
      RequestInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
      Depreciation:
        $ref: '#/definitions/DepreciationCriteria'
    type: object
    description: Hold the Asset Depreciation Request information.
  DepreciationResponse:
    properties:
      ResposneInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
      Depreciation:
        type: array
        items:
          $ref: '#/definitions/Depreciation'
    type: object
    description: Hold the Asset Depreciation Response information.
  AssetCurrentValueRequest:
    properties:
      RequestInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
      AssetCurrentValue:
        type: array
        items:
          $ref: '#/definitions/AssetCurrentValue'
    type: object
    description: Hold the Asset Currentvalue Request information.
  AssetCurrentValueResponse:
    properties:
      ResposneInfo:
        $ref: >-
          https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
      AssetCurrentValue:
        type: array
        items:
          $ref: '#/definitions/AssetCurrentValue'
    type: object
    description: Hold the Asset Currentvalue response information.


parameters:
  sortAssets:
    name: sort
    in: query
    description: >-
      Result will be sorted by code ascending by default if this parameters are not provided.
    type: array
    uniqueItems: true
    minItems: 1
    maxItems: 3
    collectionFormat: pipes
    items:
      type: string
      pattern: '[-+](code|name|assetCategory)'
    default:
      - +code
